// Code generated by ogen, DO NOT EDIT.

package api

import (
	"io"
	"time"

	"github.com/go-faster/errors"
	"github.com/google/uuid"
)

// Информация о предложении.
// Ref: #/components/schemas/bid
type Bid struct {
	ID          BidId          `json:"id"`
	Name        BidName        `json:"name"`
	Description BidDescription `json:"description"`
	Status      BidStatus      `json:"status"`
	TenderId    TenderId       `json:"tenderId"`
	AuthorType  BidAuthorType  `json:"authorType"`
	AuthorId    BidAuthorId    `json:"authorId"`
	Version     BidVersion     `json:"version"`
	// Серверная дата и время в момент, когда пользователь
	// отправил предложение на создание.
	// Передается в формате RFC3339.
	CreatedAt string `json:"createdAt"`
}

// GetID returns the value of ID.
func (s *Bid) GetID() BidId {
	return s.ID
}

// GetName returns the value of Name.
func (s *Bid) GetName() BidName {
	return s.Name
}

// GetDescription returns the value of Description.
func (s *Bid) GetDescription() BidDescription {
	return s.Description
}

// GetStatus returns the value of Status.
func (s *Bid) GetStatus() BidStatus {
	return s.Status
}

// GetTenderId returns the value of TenderId.
func (s *Bid) GetTenderId() TenderId {
	return s.TenderId
}

// GetAuthorType returns the value of AuthorType.
func (s *Bid) GetAuthorType() BidAuthorType {
	return s.AuthorType
}

// GetAuthorId returns the value of AuthorId.
func (s *Bid) GetAuthorId() BidAuthorId {
	return s.AuthorId
}

// GetVersion returns the value of Version.
func (s *Bid) GetVersion() BidVersion {
	return s.Version
}

// GetCreatedAt returns the value of CreatedAt.
func (s *Bid) GetCreatedAt() string {
	return s.CreatedAt
}

// SetID sets the value of ID.
func (s *Bid) SetID(val BidId) {
	s.ID = val
}

// SetName sets the value of Name.
func (s *Bid) SetName(val BidName) {
	s.Name = val
}

// SetDescription sets the value of Description.
func (s *Bid) SetDescription(val BidDescription) {
	s.Description = val
}

// SetStatus sets the value of Status.
func (s *Bid) SetStatus(val BidStatus) {
	s.Status = val
}

// SetTenderId sets the value of TenderId.
func (s *Bid) SetTenderId(val TenderId) {
	s.TenderId = val
}

// SetAuthorType sets the value of AuthorType.
func (s *Bid) SetAuthorType(val BidAuthorType) {
	s.AuthorType = val
}

// SetAuthorId sets the value of AuthorId.
func (s *Bid) SetAuthorId(val BidAuthorId) {
	s.AuthorId = val
}

// SetVersion sets the value of Version.
func (s *Bid) SetVersion(val BidVersion) {
	s.Version = val
}

// SetCreatedAt sets the value of CreatedAt.
func (s *Bid) SetCreatedAt(val string) {
	s.CreatedAt = val
}

func (*Bid) createBidRes()         {}
func (*Bid) editBidRes()           {}
func (*Bid) rollbackBidRes()       {}
func (*Bid) submitBidDecisionRes() {}
func (*Bid) submitBidFeedbackRes() {}
func (*Bid) updateBidStatusRes()   {}

type BidAuthorId string

// Тип автора.
// Ref: #/components/schemas/bidAuthorType
type BidAuthorType string

const (
	BidAuthorTypeOrganization BidAuthorType = "Organization"
	BidAuthorTypeUser         BidAuthorType = "User"
)

// AllValues returns all BidAuthorType values.
func (BidAuthorType) AllValues() []BidAuthorType {
	return []BidAuthorType{
		BidAuthorTypeOrganization,
		BidAuthorTypeUser,
	}
}

// MarshalText implements encoding.TextMarshaler.
func (s BidAuthorType) MarshalText() ([]byte, error) {
	switch s {
	case BidAuthorTypeOrganization:
		return []byte(s), nil
	case BidAuthorTypeUser:
		return []byte(s), nil
	default:
		return nil, errors.Errorf("invalid value: %q", s)
	}
}

// UnmarshalText implements encoding.TextUnmarshaler.
func (s *BidAuthorType) UnmarshalText(data []byte) error {
	switch BidAuthorType(data) {
	case BidAuthorTypeOrganization:
		*s = BidAuthorTypeOrganization
		return nil
	case BidAuthorTypeUser:
		*s = BidAuthorTypeUser
		return nil
	default:
		return errors.Errorf("invalid value: %q", data)
	}
}

// Решение по предложению.
// Ref: #/components/schemas/bidDecision
type BidDecision string

const (
	BidDecisionApproved BidDecision = "Approved"
	BidDecisionRejected BidDecision = "Rejected"
)

// AllValues returns all BidDecision values.
func (BidDecision) AllValues() []BidDecision {
	return []BidDecision{
		BidDecisionApproved,
		BidDecisionRejected,
	}
}

// MarshalText implements encoding.TextMarshaler.
func (s BidDecision) MarshalText() ([]byte, error) {
	switch s {
	case BidDecisionApproved:
		return []byte(s), nil
	case BidDecisionRejected:
		return []byte(s), nil
	default:
		return nil, errors.Errorf("invalid value: %q", s)
	}
}

// UnmarshalText implements encoding.TextUnmarshaler.
func (s *BidDecision) UnmarshalText(data []byte) error {
	switch BidDecision(data) {
	case BidDecisionApproved:
		*s = BidDecisionApproved
		return nil
	case BidDecisionRejected:
		*s = BidDecisionRejected
		return nil
	default:
		return errors.Errorf("invalid value: %q", data)
	}
}

type BidDescription string

type BidFeedback string

type BidId string

type BidName string

// Отзыв о предложении.
// Ref: #/components/schemas/bidReview
type BidReview struct {
	ID          BidReviewId          `json:"id"`
	Description BidReviewDescription `json:"description"`
	// Серверная дата и время в момент, когда пользователь
	// отправил отзыв на предложение.
	// Передается в формате RFC3339.
	CreatedAt string `json:"createdAt"`
}

// GetID returns the value of ID.
func (s *BidReview) GetID() BidReviewId {
	return s.ID
}

// GetDescription returns the value of Description.
func (s *BidReview) GetDescription() BidReviewDescription {
	return s.Description
}

// GetCreatedAt returns the value of CreatedAt.
func (s *BidReview) GetCreatedAt() string {
	return s.CreatedAt
}

// SetID sets the value of ID.
func (s *BidReview) SetID(val BidReviewId) {
	s.ID = val
}

// SetDescription sets the value of Description.
func (s *BidReview) SetDescription(val BidReviewDescription) {
	s.Description = val
}

// SetCreatedAt sets the value of CreatedAt.
func (s *BidReview) SetCreatedAt(val string) {
	s.CreatedAt = val
}

type BidReviewDescription string

type BidReviewId string

// Статус предложения.
// Ref: #/components/schemas/bidStatus
type BidStatus string

const (
	BidStatusCreated   BidStatus = "Created"
	BidStatusPublished BidStatus = "Published"
	BidStatusCanceled  BidStatus = "Canceled"
)

// AllValues returns all BidStatus values.
func (BidStatus) AllValues() []BidStatus {
	return []BidStatus{
		BidStatusCreated,
		BidStatusPublished,
		BidStatusCanceled,
	}
}

// MarshalText implements encoding.TextMarshaler.
func (s BidStatus) MarshalText() ([]byte, error) {
	switch s {
	case BidStatusCreated:
		return []byte(s), nil
	case BidStatusPublished:
		return []byte(s), nil
	case BidStatusCanceled:
		return []byte(s), nil
	default:
		return nil, errors.Errorf("invalid value: %q", s)
	}
}

// UnmarshalText implements encoding.TextUnmarshaler.
func (s *BidStatus) UnmarshalText(data []byte) error {
	switch BidStatus(data) {
	case BidStatusCreated:
		*s = BidStatusCreated
		return nil
	case BidStatusPublished:
		*s = BidStatusPublished
		return nil
	case BidStatusCanceled:
		*s = BidStatusCanceled
		return nil
	default:
		return errors.Errorf("invalid value: %q", data)
	}
}

func (*BidStatus) getBidStatusRes() {}

type BidVersion int32

// CheckServerInternalServerError is response for CheckServer operation.
type CheckServerInternalServerError struct{}

func (*CheckServerInternalServerError) checkServerRes() {}

type CheckServerOK struct {
	Data io.Reader
}

// Read reads data from the Data reader.
//
// Kept to satisfy the io.Reader interface.
func (s CheckServerOK) Read(p []byte) (n int, err error) {
	if s.Data == nil {
		return 0, io.EOF
	}
	return s.Data.Read(p)
}

func (*CheckServerOK) checkServerRes() {}

type CreateBidForbidden ErrorResponse

func (*CreateBidForbidden) createBidRes() {}

type CreateBidNotFound ErrorResponse

func (*CreateBidNotFound) createBidRes() {}

type CreateBidReq struct {
	Name            BidName        `json:"name"`
	Description     BidDescription `json:"description"`
	Status          BidStatus      `json:"status"`
	TenderId        TenderId       `json:"tenderId"`
	OrganizationId  OrganizationId `json:"organizationId"`
	CreatorUsername Username       `json:"creatorUsername"`
}

// GetName returns the value of Name.
func (s *CreateBidReq) GetName() BidName {
	return s.Name
}

// GetDescription returns the value of Description.
func (s *CreateBidReq) GetDescription() BidDescription {
	return s.Description
}

// GetStatus returns the value of Status.
func (s *CreateBidReq) GetStatus() BidStatus {
	return s.Status
}

// GetTenderId returns the value of TenderId.
func (s *CreateBidReq) GetTenderId() TenderId {
	return s.TenderId
}

// GetOrganizationId returns the value of OrganizationId.
func (s *CreateBidReq) GetOrganizationId() OrganizationId {
	return s.OrganizationId
}

// GetCreatorUsername returns the value of CreatorUsername.
func (s *CreateBidReq) GetCreatorUsername() Username {
	return s.CreatorUsername
}

// SetName sets the value of Name.
func (s *CreateBidReq) SetName(val BidName) {
	s.Name = val
}

// SetDescription sets the value of Description.
func (s *CreateBidReq) SetDescription(val BidDescription) {
	s.Description = val
}

// SetStatus sets the value of Status.
func (s *CreateBidReq) SetStatus(val BidStatus) {
	s.Status = val
}

// SetTenderId sets the value of TenderId.
func (s *CreateBidReq) SetTenderId(val TenderId) {
	s.TenderId = val
}

// SetOrganizationId sets the value of OrganizationId.
func (s *CreateBidReq) SetOrganizationId(val OrganizationId) {
	s.OrganizationId = val
}

// SetCreatorUsername sets the value of CreatorUsername.
func (s *CreateBidReq) SetCreatorUsername(val Username) {
	s.CreatorUsername = val
}

type CreateBidUnauthorized ErrorResponse

func (*CreateBidUnauthorized) createBidRes() {}

type CreateTenderForbidden ErrorResponse

func (*CreateTenderForbidden) createTenderRes() {}

type CreateTenderReq struct {
	Name            TenderName        `json:"name"`
	Description     TenderDescription `json:"description"`
	ServiceType     TenderServiceType `json:"serviceType"`
	Status          TenderStatus      `json:"status"`
	OrganizationId  OrganizationId    `json:"organizationId"`
	CreatorUsername Username          `json:"creatorUsername"`
}

// GetName returns the value of Name.
func (s *CreateTenderReq) GetName() TenderName {
	return s.Name
}

// GetDescription returns the value of Description.
func (s *CreateTenderReq) GetDescription() TenderDescription {
	return s.Description
}

// GetServiceType returns the value of ServiceType.
func (s *CreateTenderReq) GetServiceType() TenderServiceType {
	return s.ServiceType
}

// GetStatus returns the value of Status.
func (s *CreateTenderReq) GetStatus() TenderStatus {
	return s.Status
}

// GetOrganizationId returns the value of OrganizationId.
func (s *CreateTenderReq) GetOrganizationId() OrganizationId {
	return s.OrganizationId
}

// GetCreatorUsername returns the value of CreatorUsername.
func (s *CreateTenderReq) GetCreatorUsername() Username {
	return s.CreatorUsername
}

// SetName sets the value of Name.
func (s *CreateTenderReq) SetName(val TenderName) {
	s.Name = val
}

// SetDescription sets the value of Description.
func (s *CreateTenderReq) SetDescription(val TenderDescription) {
	s.Description = val
}

// SetServiceType sets the value of ServiceType.
func (s *CreateTenderReq) SetServiceType(val TenderServiceType) {
	s.ServiceType = val
}

// SetStatus sets the value of Status.
func (s *CreateTenderReq) SetStatus(val TenderStatus) {
	s.Status = val
}

// SetOrganizationId sets the value of OrganizationId.
func (s *CreateTenderReq) SetOrganizationId(val OrganizationId) {
	s.OrganizationId = val
}

// SetCreatorUsername sets the value of CreatorUsername.
func (s *CreateTenderReq) SetCreatorUsername(val Username) {
	s.CreatorUsername = val
}

type CreateTenderUnauthorized ErrorResponse

func (*CreateTenderUnauthorized) createTenderRes() {}

type EditBidBadRequest ErrorResponse

func (*EditBidBadRequest) editBidRes() {}

type EditBidForbidden ErrorResponse

func (*EditBidForbidden) editBidRes() {}

type EditBidNotFound ErrorResponse

func (*EditBidNotFound) editBidRes() {}

type EditBidReq struct {
	Name        OptBidName        `json:"name"`
	Description OptBidDescription `json:"description"`
}

// GetName returns the value of Name.
func (s *EditBidReq) GetName() OptBidName {
	return s.Name
}

// GetDescription returns the value of Description.
func (s *EditBidReq) GetDescription() OptBidDescription {
	return s.Description
}

// SetName sets the value of Name.
func (s *EditBidReq) SetName(val OptBidName) {
	s.Name = val
}

// SetDescription sets the value of Description.
func (s *EditBidReq) SetDescription(val OptBidDescription) {
	s.Description = val
}

type EditBidUnauthorized ErrorResponse

func (*EditBidUnauthorized) editBidRes() {}

type EditTenderBadRequest ErrorResponse

func (*EditTenderBadRequest) editTenderRes() {}

type EditTenderForbidden ErrorResponse

func (*EditTenderForbidden) editTenderRes() {}

type EditTenderNotFound ErrorResponse

func (*EditTenderNotFound) editTenderRes() {}

type EditTenderReq struct {
	Name        OptTenderName        `json:"name"`
	Description OptTenderDescription `json:"description"`
	ServiceType OptTenderServiceType `json:"serviceType"`
}

// GetName returns the value of Name.
func (s *EditTenderReq) GetName() OptTenderName {
	return s.Name
}

// GetDescription returns the value of Description.
func (s *EditTenderReq) GetDescription() OptTenderDescription {
	return s.Description
}

// GetServiceType returns the value of ServiceType.
func (s *EditTenderReq) GetServiceType() OptTenderServiceType {
	return s.ServiceType
}

// SetName sets the value of Name.
func (s *EditTenderReq) SetName(val OptTenderName) {
	s.Name = val
}

// SetDescription sets the value of Description.
func (s *EditTenderReq) SetDescription(val OptTenderDescription) {
	s.Description = val
}

// SetServiceType sets the value of ServiceType.
func (s *EditTenderReq) SetServiceType(val OptTenderServiceType) {
	s.ServiceType = val
}

type EditTenderUnauthorized ErrorResponse

func (*EditTenderUnauthorized) editTenderRes() {}

// Используется для возвращения ошибки пользователю.
// Ref: #/components/schemas/errorResponse
type ErrorResponse struct {
	// Описание ошибки в свободной форме.
	Reason string `json:"reason"`
}

// GetReason returns the value of Reason.
func (s *ErrorResponse) GetReason() string {
	return s.Reason
}

// SetReason sets the value of Reason.
func (s *ErrorResponse) SetReason(val string) {
	s.Reason = val
}

func (*ErrorResponse) getTendersRes()     {}
func (*ErrorResponse) getUserBidsRes()    {}
func (*ErrorResponse) getUserTendersRes() {}

type GetBidReviewsBadRequest ErrorResponse

func (*GetBidReviewsBadRequest) getBidReviewsRes() {}

type GetBidReviewsForbidden ErrorResponse

func (*GetBidReviewsForbidden) getBidReviewsRes() {}

type GetBidReviewsNotFound ErrorResponse

func (*GetBidReviewsNotFound) getBidReviewsRes() {}

type GetBidReviewsOKApplicationJSON []BidReview

func (*GetBidReviewsOKApplicationJSON) getBidReviewsRes() {}

type GetBidReviewsUnauthorized ErrorResponse

func (*GetBidReviewsUnauthorized) getBidReviewsRes() {}

type GetBidStatusForbidden ErrorResponse

func (*GetBidStatusForbidden) getBidStatusRes() {}

type GetBidStatusNotFound ErrorResponse

func (*GetBidStatusNotFound) getBidStatusRes() {}

type GetBidStatusUnauthorized ErrorResponse

func (*GetBidStatusUnauthorized) getBidStatusRes() {}

type GetBidsForTenderBadRequest ErrorResponse

func (*GetBidsForTenderBadRequest) getBidsForTenderRes() {}

type GetBidsForTenderForbidden ErrorResponse

func (*GetBidsForTenderForbidden) getBidsForTenderRes() {}

type GetBidsForTenderNotFound ErrorResponse

func (*GetBidsForTenderNotFound) getBidsForTenderRes() {}

type GetBidsForTenderOKApplicationJSON []Bid

func (*GetBidsForTenderOKApplicationJSON) getBidsForTenderRes() {}

type GetBidsForTenderUnauthorized ErrorResponse

func (*GetBidsForTenderUnauthorized) getBidsForTenderRes() {}

type GetTenderStatusForbidden ErrorResponse

func (*GetTenderStatusForbidden) getTenderStatusRes() {}

type GetTenderStatusNotFound ErrorResponse

func (*GetTenderStatusNotFound) getTenderStatusRes() {}

type GetTenderStatusUnauthorized ErrorResponse

func (*GetTenderStatusUnauthorized) getTenderStatusRes() {}

type GetTendersOKApplicationJSON []Tender

func (*GetTendersOKApplicationJSON) getTendersRes() {}

type GetUserBidsOKApplicationJSON []Bid

func (*GetUserBidsOKApplicationJSON) getUserBidsRes() {}

type GetUserTendersOKApplicationJSON []Tender

func (*GetUserTendersOKApplicationJSON) getUserTendersRes() {}

// NewOptBidDescription returns new OptBidDescription with value set to v.
func NewOptBidDescription(v BidDescription) OptBidDescription {
	return OptBidDescription{
		Value: v,
		Set:   true,
	}
}

// OptBidDescription is optional BidDescription.
type OptBidDescription struct {
	Value BidDescription
	Set   bool
}

// IsSet returns true if OptBidDescription was set.
func (o OptBidDescription) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptBidDescription) Reset() {
	var v BidDescription
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptBidDescription) SetTo(v BidDescription) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptBidDescription) Get() (v BidDescription, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o OptBidDescription) Or(d BidDescription) BidDescription {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}

// NewOptBidName returns new OptBidName with value set to v.
func NewOptBidName(v BidName) OptBidName {
	return OptBidName{
		Value: v,
		Set:   true,
	}
}

// OptBidName is optional BidName.
type OptBidName struct {
	Value BidName
	Set   bool
}

// IsSet returns true if OptBidName was set.
func (o OptBidName) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptBidName) Reset() {
	var v BidName
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptBidName) SetTo(v BidName) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptBidName) Get() (v BidName, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o OptBidName) Or(d BidName) BidName {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}

// NewOptInt32 returns new OptInt32 with value set to v.
func NewOptInt32(v int32) OptInt32 {
	return OptInt32{
		Value: v,
		Set:   true,
	}
}

// OptInt32 is optional int32.
type OptInt32 struct {
	Value int32
	Set   bool
}

// IsSet returns true if OptInt32 was set.
func (o OptInt32) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptInt32) Reset() {
	var v int32
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptInt32) SetTo(v int32) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptInt32) Get() (v int32, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o OptInt32) Or(d int32) int32 {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}

// NewOptTenderDescription returns new OptTenderDescription with value set to v.
func NewOptTenderDescription(v TenderDescription) OptTenderDescription {
	return OptTenderDescription{
		Value: v,
		Set:   true,
	}
}

// OptTenderDescription is optional TenderDescription.
type OptTenderDescription struct {
	Value TenderDescription
	Set   bool
}

// IsSet returns true if OptTenderDescription was set.
func (o OptTenderDescription) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptTenderDescription) Reset() {
	var v TenderDescription
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptTenderDescription) SetTo(v TenderDescription) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptTenderDescription) Get() (v TenderDescription, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o OptTenderDescription) Or(d TenderDescription) TenderDescription {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}

// NewOptTenderName returns new OptTenderName with value set to v.
func NewOptTenderName(v TenderName) OptTenderName {
	return OptTenderName{
		Value: v,
		Set:   true,
	}
}

// OptTenderName is optional TenderName.
type OptTenderName struct {
	Value TenderName
	Set   bool
}

// IsSet returns true if OptTenderName was set.
func (o OptTenderName) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptTenderName) Reset() {
	var v TenderName
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptTenderName) SetTo(v TenderName) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptTenderName) Get() (v TenderName, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o OptTenderName) Or(d TenderName) TenderName {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}

// NewOptTenderServiceType returns new OptTenderServiceType with value set to v.
func NewOptTenderServiceType(v TenderServiceType) OptTenderServiceType {
	return OptTenderServiceType{
		Value: v,
		Set:   true,
	}
}

// OptTenderServiceType is optional TenderServiceType.
type OptTenderServiceType struct {
	Value TenderServiceType
	Set   bool
}

// IsSet returns true if OptTenderServiceType was set.
func (o OptTenderServiceType) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptTenderServiceType) Reset() {
	var v TenderServiceType
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptTenderServiceType) SetTo(v TenderServiceType) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptTenderServiceType) Get() (v TenderServiceType, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o OptTenderServiceType) Or(d TenderServiceType) TenderServiceType {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}

// NewOptUsername returns new OptUsername with value set to v.
func NewOptUsername(v Username) OptUsername {
	return OptUsername{
		Value: v,
		Set:   true,
	}
}

// OptUsername is optional Username.
type OptUsername struct {
	Value Username
	Set   bool
}

// IsSet returns true if OptUsername was set.
func (o OptUsername) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptUsername) Reset() {
	var v Username
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptUsername) SetTo(v Username) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptUsername) Get() (v Username, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o OptUsername) Or(d Username) Username {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}

type OrganizationId uuid.UUID

type RollbackBidBadRequest ErrorResponse

func (*RollbackBidBadRequest) rollbackBidRes() {}

type RollbackBidForbidden ErrorResponse

func (*RollbackBidForbidden) rollbackBidRes() {}

type RollbackBidNotFound ErrorResponse

func (*RollbackBidNotFound) rollbackBidRes() {}

type RollbackBidUnauthorized ErrorResponse

func (*RollbackBidUnauthorized) rollbackBidRes() {}

type RollbackTenderBadRequest ErrorResponse

func (*RollbackTenderBadRequest) rollbackTenderRes() {}

type RollbackTenderForbidden ErrorResponse

func (*RollbackTenderForbidden) rollbackTenderRes() {}

type RollbackTenderNotFound ErrorResponse

func (*RollbackTenderNotFound) rollbackTenderRes() {}

type RollbackTenderUnauthorized ErrorResponse

func (*RollbackTenderUnauthorized) rollbackTenderRes() {}

type SubmitBidDecisionBadRequest ErrorResponse

func (*SubmitBidDecisionBadRequest) submitBidDecisionRes() {}

type SubmitBidDecisionForbidden ErrorResponse

func (*SubmitBidDecisionForbidden) submitBidDecisionRes() {}

type SubmitBidDecisionNotFound ErrorResponse

func (*SubmitBidDecisionNotFound) submitBidDecisionRes() {}

type SubmitBidDecisionUnauthorized ErrorResponse

func (*SubmitBidDecisionUnauthorized) submitBidDecisionRes() {}

type SubmitBidFeedbackBadRequest ErrorResponse

func (*SubmitBidFeedbackBadRequest) submitBidFeedbackRes() {}

type SubmitBidFeedbackForbidden ErrorResponse

func (*SubmitBidFeedbackForbidden) submitBidFeedbackRes() {}

type SubmitBidFeedbackNotFound ErrorResponse

func (*SubmitBidFeedbackNotFound) submitBidFeedbackRes() {}

type SubmitBidFeedbackUnauthorized ErrorResponse

func (*SubmitBidFeedbackUnauthorized) submitBidFeedbackRes() {}

// Информация о тендере.
// Ref: #/components/schemas/tender
type Tender struct {
	ID             TenderId          `json:"id"`
	Name           TenderName        `json:"name"`
	Description    TenderDescription `json:"description"`
	ServiceType    TenderServiceType `json:"serviceType"`
	Status         TenderStatus      `json:"status"`
	OrganizationId OrganizationId    `json:"organizationId"`
	Version        TenderVersion     `json:"version"`
	// Серверная дата и время в момент, когда пользователь
	// отправил тендер на создание.
	// Передается в формате RFC3339.
	CreatedAt time.Time `json:"createdAt"`
}

// GetID returns the value of ID.
func (s *Tender) GetID() TenderId {
	return s.ID
}

// GetName returns the value of Name.
func (s *Tender) GetName() TenderName {
	return s.Name
}

// GetDescription returns the value of Description.
func (s *Tender) GetDescription() TenderDescription {
	return s.Description
}

// GetServiceType returns the value of ServiceType.
func (s *Tender) GetServiceType() TenderServiceType {
	return s.ServiceType
}

// GetStatus returns the value of Status.
func (s *Tender) GetStatus() TenderStatus {
	return s.Status
}

// GetOrganizationId returns the value of OrganizationId.
func (s *Tender) GetOrganizationId() OrganizationId {
	return s.OrganizationId
}

// GetVersion returns the value of Version.
func (s *Tender) GetVersion() TenderVersion {
	return s.Version
}

// GetCreatedAt returns the value of CreatedAt.
func (s *Tender) GetCreatedAt() time.Time {
	return s.CreatedAt
}

// SetID sets the value of ID.
func (s *Tender) SetID(val TenderId) {
	s.ID = val
}

// SetName sets the value of Name.
func (s *Tender) SetName(val TenderName) {
	s.Name = val
}

// SetDescription sets the value of Description.
func (s *Tender) SetDescription(val TenderDescription) {
	s.Description = val
}

// SetServiceType sets the value of ServiceType.
func (s *Tender) SetServiceType(val TenderServiceType) {
	s.ServiceType = val
}

// SetStatus sets the value of Status.
func (s *Tender) SetStatus(val TenderStatus) {
	s.Status = val
}

// SetOrganizationId sets the value of OrganizationId.
func (s *Tender) SetOrganizationId(val OrganizationId) {
	s.OrganizationId = val
}

// SetVersion sets the value of Version.
func (s *Tender) SetVersion(val TenderVersion) {
	s.Version = val
}

// SetCreatedAt sets the value of CreatedAt.
func (s *Tender) SetCreatedAt(val time.Time) {
	s.CreatedAt = val
}

func (*Tender) createTenderRes()       {}
func (*Tender) editTenderRes()         {}
func (*Tender) rollbackTenderRes()     {}
func (*Tender) updateTenderStatusRes() {}

type TenderDescription string

type TenderId uuid.UUID

type TenderName string

// Вид услуги, к которой относиться тендер.
// Ref: #/components/schemas/tenderServiceType
type TenderServiceType string

const (
	TenderServiceTypeConstruction TenderServiceType = "Construction"
	TenderServiceTypeDelivery     TenderServiceType = "Delivery"
	TenderServiceTypeManufacture  TenderServiceType = "Manufacture"
)

// AllValues returns all TenderServiceType values.
func (TenderServiceType) AllValues() []TenderServiceType {
	return []TenderServiceType{
		TenderServiceTypeConstruction,
		TenderServiceTypeDelivery,
		TenderServiceTypeManufacture,
	}
}

// MarshalText implements encoding.TextMarshaler.
func (s TenderServiceType) MarshalText() ([]byte, error) {
	switch s {
	case TenderServiceTypeConstruction:
		return []byte(s), nil
	case TenderServiceTypeDelivery:
		return []byte(s), nil
	case TenderServiceTypeManufacture:
		return []byte(s), nil
	default:
		return nil, errors.Errorf("invalid value: %q", s)
	}
}

// UnmarshalText implements encoding.TextUnmarshaler.
func (s *TenderServiceType) UnmarshalText(data []byte) error {
	switch TenderServiceType(data) {
	case TenderServiceTypeConstruction:
		*s = TenderServiceTypeConstruction
		return nil
	case TenderServiceTypeDelivery:
		*s = TenderServiceTypeDelivery
		return nil
	case TenderServiceTypeManufacture:
		*s = TenderServiceTypeManufacture
		return nil
	default:
		return errors.Errorf("invalid value: %q", data)
	}
}

// Статус тендер.
// Ref: #/components/schemas/tenderStatus
type TenderStatus string

const (
	TenderStatusCreated   TenderStatus = "Created"
	TenderStatusPublished TenderStatus = "Published"
	TenderStatusClosed    TenderStatus = "Closed"
)

// AllValues returns all TenderStatus values.
func (TenderStatus) AllValues() []TenderStatus {
	return []TenderStatus{
		TenderStatusCreated,
		TenderStatusPublished,
		TenderStatusClosed,
	}
}

// MarshalText implements encoding.TextMarshaler.
func (s TenderStatus) MarshalText() ([]byte, error) {
	switch s {
	case TenderStatusCreated:
		return []byte(s), nil
	case TenderStatusPublished:
		return []byte(s), nil
	case TenderStatusClosed:
		return []byte(s), nil
	default:
		return nil, errors.Errorf("invalid value: %q", s)
	}
}

// UnmarshalText implements encoding.TextUnmarshaler.
func (s *TenderStatus) UnmarshalText(data []byte) error {
	switch TenderStatus(data) {
	case TenderStatusCreated:
		*s = TenderStatusCreated
		return nil
	case TenderStatusPublished:
		*s = TenderStatusPublished
		return nil
	case TenderStatusClosed:
		*s = TenderStatusClosed
		return nil
	default:
		return errors.Errorf("invalid value: %q", data)
	}
}

func (*TenderStatus) getTenderStatusRes() {}

type TenderVersion int32

type UpdateBidStatusBadRequest ErrorResponse

func (*UpdateBidStatusBadRequest) updateBidStatusRes() {}

type UpdateBidStatusForbidden ErrorResponse

func (*UpdateBidStatusForbidden) updateBidStatusRes() {}

type UpdateBidStatusNotFound ErrorResponse

func (*UpdateBidStatusNotFound) updateBidStatusRes() {}

type UpdateBidStatusUnauthorized ErrorResponse

func (*UpdateBidStatusUnauthorized) updateBidStatusRes() {}

type UpdateTenderStatusBadRequest ErrorResponse

func (*UpdateTenderStatusBadRequest) updateTenderStatusRes() {}

type UpdateTenderStatusForbidden ErrorResponse

func (*UpdateTenderStatusForbidden) updateTenderStatusRes() {}

type UpdateTenderStatusNotFound ErrorResponse

func (*UpdateTenderStatusNotFound) updateTenderStatusRes() {}

type UpdateTenderStatusUnauthorized ErrorResponse

func (*UpdateTenderStatusUnauthorized) updateTenderStatusRes() {}

type Username string
